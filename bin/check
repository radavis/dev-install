#!/bin/bash
exec > >(tee $0.log) 2>&1

black="\033[0;30m"
dark_gray="\033[1;30m"
red="\033[0;31m"
light_red="\033[1;31m"
green="\033[0;32m"
light_green="\033[1;32m"
brown="\033[0;33m"
yellow="\033[1;33m"
blue="\033[0;34m"
light_blue="\033[1;34m"
purple="\033[0;35m"
light_purple="\033[1;35m"
cyan="\033[0;36m"
light_cyan="\033[1;36m"
light_gray="\033[0;37m"
white="\033[1;37m"
no_color="\033[0m"

success() {
  printf "${cyan}[SUCCESS]${no_color} $*"
}

warning() {
  printf "${light_purple}[WARNING]${no_color} $*"
}

response() {
  printf "\r\n  ${yellow}Response:${no_color} ${white}$*${no_color}\r\n"
}

check() {
  cmd=$1
  flag=$2

  if $(command -v $cmd >/dev/null); then
    result=$(eval "$cmd $flag")
    success "$cmd was detected"
    response $result
  else
    warning "$cmd was not detected!\r\n"
  fi
}

check_ruby() {
  ruby_path=$(which ruby)

  if [[ "$ruby_path" == "$HOME/.rubies"* ]]; then
    ruby_version=$(ruby -v)
    success "$ruby_version was detected in the home folder!"
  else
    warning "Not using a ruby version manager!"
  fi

  response $ruby_path
}

check_zsh() {
  username=$(whoami)
  shell_name=$(finger $username | grep -o "Shell:.*")

  if [[ "$shell_name" == *"/bin/zsh" ]]; then
    success "$username's shell is /bin/zsh!"
  else
    warning "$username's shell is not /bin/zsh!"
  fi

  response $shell_name
}

main() {
  check_zsh
  check "xcode-select" "-v"
  check "brew" "-v"
  check_ruby
  check "heroku" "version"
  check "git" "--version"
  check "psql" "--version"
  check "atom" "-v"
  check "et" "-v"
  check "rspec" "-v"
  check "rails" "-v"
}

main
